{"version":3,"sources":["components/CoinRow.js","components/TableCoins.js","components/Convertor.js","App.js","index.js"],"names":["CoinRow","num","coin","index","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","textAlign","src","image","alt","name","width","className","symbol","format","current_price","price_change_percentage_24h","Math","round","total_volume","TableCoins","coins","search","filteredCoins","filter","toLowerCase","includes","map","i","Convertor","useState","amount","setAmount","dividend","setDividend","divisor","setDivisor","type","placeholder","onChange","e","target","value","onClick","temp","e1","e2","convert","toUpperCase","disabled","readonly","App","setCoins","setSearch","getData","a","axios","get","res","data","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2fbc37f1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function CoinRow({coin, index}) {\r\n\r\n  const formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 4\r\n  })\r\n\r\n  const roundToTwo = (num) => {\r\n    return +(Math.round(num + \"e+3\")  + \"e-3\");\r\n  }\r\n  \r\n  return (\r\n    <tr key={index}>\r\n      <td style={{textAlign: 'center'}}>{index}</td>\r\n      <td>\r\n        <img src={coin.image} alt={coin.name} style={{width: '3%'}} className='img-fluid me-4' />\r\n        <span>\r\n          {coin.name}\r\n        </span>\r\n        <span className='ms-3 text-muted text-uppercase'>\r\n          {coin.symbol}\r\n        </span>\r\n      </td>\r\n      <td style={{textAlign: 'right'}}>\r\n        {formatter.format(coin.current_price)}\r\n      </td>\r\n      <td style={{textAlign: 'center'}} className={(coin.price_change_percentage_24h > 0 ? 'text-success' : 'text-danger')}>\r\n        {roundToTwo(coin.price_change_percentage_24h)} %\r\n      </td>\r\n      <td style={{textAlign: 'center'}}>\r\n        {formatter.format(coin.total_volume)}\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport CoinRow from './CoinRow'\r\n\r\nexport default function TableCoins({ coins, search }) {\r\n\r\n  const filteredCoins = coins.filter(\r\n    (coin) => coin.name.toLowerCase().includes(search.toLowerCase()) | coin.symbol.toLowerCase().includes(search.toLowerCase())\r\n  )\r\n\r\n  return (\r\n    <table className='table table-dark mt-4 table-hover'>\r\n      <thead>\r\n        <tr>\r\n          <td style={{textAlign: 'center'}}>#</td>\r\n          <td style={{textAlign: 'left'}}>Coin</td>\r\n          <td style={{textAlign: 'right'}}>Price</td>\r\n          <td style={{textAlign: 'center'}}>Price Change</td>\r\n          <td style={{textAlign: 'center'}}>24h Volume</td>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {filteredCoins.map((coin, i) => (\r\n          <CoinRow coin={coin} index={i + 1} key={i} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function Convertor({ coins }) {\r\n\r\n  const [amount, setAmount] = useState(0)\r\n  const [dividend, setDividend] = useState('')\r\n  const [divisor, setDivisor] = useState('')\r\n\r\n  const convert = () => {\r\n    const e1 = filteredCoins(dividend)[0] ? filteredCoins(dividend)[0] : ''\r\n    const e2 = filteredCoins(divisor)[0] ? filteredCoins(divisor)[0] : ''\r\n\r\n    if(amount <= 0 || dividend === '' || divisor === '')\r\n      return ''\r\n\r\n    if(e1 === '' && e2 === '') {\r\n      return ''\r\n    } else {\r\n      return amount * e1.current_price / e2.current_price\r\n    }\r\n    \r\n  }   \r\n\r\n  const filteredCoins = (search) => coins.filter(\r\n    (coin) => coin.name.toLowerCase().includes(search.toLowerCase()) | coin.symbol.toLowerCase().includes(search.toLowerCase())\r\n  )\r\n\r\n  function flip() {\r\n    let temp = dividend\r\n    setDividend(divisor)\r\n    setDivisor(temp)\r\n  }\r\n  \r\n  return (\r\n    <div className='row g-3 mt-1 mx-auto justify-content-center' >\r\n\r\n      <div className='col-2'>\r\n        <input\r\n          type='number'\r\n          placeholder='Enter amount'\r\n          className='form-control bg-dark text-light border-0 margin-top mt-2 text-center'\r\n          onChange={e => setAmount(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div className='col-2'>\r\n        <input\r\n          type='text'\r\n          placeholder='Type a coin'\r\n          className='form-control bg-dark text-light border-0 margin-top mt-2 text-center'\r\n          onChange={e => setDividend(e.target.value)}\r\n          value={dividend}\r\n        />\r\n      </div>\r\n\r\n      <div className='col-auto'>\r\n        <button \r\n          className='btn btn-primary mb-3 text-light border-0 margin-top mt-2'\r\n          onClick={flip}\r\n        >\r\n          Flip\r\n        </button>\r\n      </div>\r\n\r\n      <div className='col-2'>\r\n        <input\r\n          type='text'\r\n          placeholder='Type a coin'\r\n          className='form-control bg-dark text-light border-0 margin-top mt-2 text-center'\r\n          onChange={e => setDivisor(e.target.value)}\r\n          value={divisor}\r\n        />\r\n      </div>\r\n\r\n      <div className='col-4'>\r\n        <input\r\n          type='text'          \r\n          className='form-control bg-dark text-light border-0 margin-top mt-2 text-center'\r\n          value={            \r\n            convert() + ' ' + \r\n            (divisor === '' ? '' : (filteredCoins(divisor)[0] ? filteredCoins(divisor)[0].symbol.toUpperCase() : ''))\r\n          }\r\n          disabled readonly\r\n        />          \r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport TableCoins from './components/TableCoins'\nimport Convertor from './components/Convertor'\n\nfunction App() {\n\n  const [coins, setCoins] = useState([])\n\n  const [search, setSearch] = useState('')\n\n  const getData = async () => {\n    const res = await axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=10000')\n    setCoins(res.data)\n  }\n\n  useEffect(() => {\n    getData()\n  })\n\n  return (\n    <div className='container'>\n      <div className='row g-4 mt-3 mx-auto'>\n\n        <div>\n          <h4 className='text-center'>\n            Cryptocurrency Converter and Calculator\n          </h4>\n        </div>\n\n        <Convertor coins={coins} />\n\n        <input\n          type='text'\n          placeholder='Search a Coin'\n          className='form-control bg-dark text-light border-0 margin-top mt-4 text-center'\n          onChange={e => setSearch(e.target.value)}\n        />\n\n       <TableCoins coins={coins} search={search} />\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}